#!/usr/bin/env node

const fs = require('fs')
const path = require('path')
const names = require('dependent-counts').map(count => count.name)
const chain = require('lodash').chain
const isNumber = require('is-number')
const ora = require('ora')
const spinner = ora('').start()
const registry = require('package-stream')({
  db: 'https://replicate.npmjs.com',
  include_docs: true
})

registry
  .on('package', addPackage)
  .on('up-to-date', finish)

function addPackage (pkg) {
  const name = pkg.name
  if (name && name.length) names.push(name)

  // to check the finish function early...
  // if (names.length > 100 * 1000) finish()
}

function finish () {
  const filename = path.join(__dirname, '../names.json')
  const finalNames = chain(names)
    .compact()
    .uniq()
    .value()
    .filter(name => !isNumber(name))

  fs.writeFileSync(filename, JSON.stringify(finalNames, null, 2))
  console.log(`\nwrote ${finalNames.length} package names to ${filename}`)
  process.exit()
}

setInterval(() => {
  spinner.text = `${names.length} names collected`
}, 50)
